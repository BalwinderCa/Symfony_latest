<?php

// src/Repository/TransactionRepository.php

namespace App\AppBundle\Repository;

use App\AppBundle\Entity\Transaction;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Persistence\ManagerRegistry;

/**
 * TransactionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TransactionRepository extends ServiceEntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, Transaction::class);
    }

    /**
     * Returns the number of Transaction rows.
     *
     * @param array $criteria Optional criteria to filter the count
     * @return int The number of rows
     */
    public function count(array $criteria = []): int
    {
        return (int) $this->countBy($criteria);
    }

    /**
     * Count Transaction entities based on given criteria.
     *
     * @param array $criteria Criteria to filter the count
     * @return int
     */
    public function countBy(array $criteria): int
    {
        return (int) $this->createQueryBuilder('t')
            ->select('count(t)')
            ->where($this->buildCriteria($criteria)) // Optionally add any additional filtering logic here
            ->getQuery()
            ->getSingleScalarResult();
    }

    /**
     * Builds criteria for the count query (optional).
     *
     * @param array $criteria
     * @return string
     */
    private function buildCriteria(array $criteria): string
    {
        // Example: You can add custom logic to handle filtering based on $criteria
        // Adjust according to your needs
        $criteriaString = '';
        if (!empty($criteria)) {
            foreach ($criteria as $key => $value) {
                $criteriaString .= "t.$key = :$key AND ";
            }
            $criteriaString = rtrim($criteriaString, ' AND ');
        }
        return $criteriaString;
    }
}
